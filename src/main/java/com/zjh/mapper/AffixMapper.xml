<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjh.mapper.AffixMapper" >
  <resultMap id="BaseResultMap" type="com.zjh.pojo.Affix" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="affixname" property="affixname" jdbcType="VARCHAR" />
    <result column="affixtype" property="affixtype" jdbcType="VARCHAR" />
    <result column="affixtime" property="affixtime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zjh.pojo.Affix" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, affixname, affixtype, affixtime, status
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.zjh.pojo.AffixExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from affix
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zjh.pojo.AffixExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from affix
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from affix
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from affix
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zjh.pojo.AffixExample" >
    delete from affix
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zjh.pojo.Affix" >
    insert into affix (affixname, affixtype, affixtime,descrption, status, content,size,affixpath)
    values (#{affixname}, #{affixtype},#{affixtime},#{descrption},#{status}, #{content},#{size},#{affixpath})
  </insert>
  <insert id="insertSelective" parameterType="com.zjh.pojo.Affix" >
    insert into affix
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="affixname != null" >
        affixname,
      </if>
      <if test="affixtype != null" >
        affixtype,
      </if>
      <if test="affixtime != null" >
        affixtime,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="affixname != null" >
        #{affixname,jdbcType=VARCHAR},
      </if>
      <if test="affixtype != null" >
        #{affixtype,jdbcType=VARCHAR},
      </if>
      <if test="affixtime != null" >
        #{affixtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zjh.pojo.AffixExample" resultType="java.lang.Integer" >
    select count(*) from affix
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update affix
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.affixname != null" >
        affixname = #{record.affixname,jdbcType=VARCHAR},
      </if>
      <if test="record.affixtype != null" >
        affixtype = #{record.affixtype,jdbcType=VARCHAR},
      </if>
      <if test="record.affixtime != null" >
        affixtime = #{record.affixtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update affix
    set id = #{record.id,jdbcType=INTEGER},
      affixname = #{record.affixname,jdbcType=VARCHAR},
      affixtype = #{record.affixtype,jdbcType=VARCHAR},
      affixtime = #{record.affixtime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update affix
    set id = #{record.id,jdbcType=INTEGER},
      affixname = #{record.affixname,jdbcType=VARCHAR},
      affixtype = #{record.affixtype,jdbcType=VARCHAR},
      affixtime = #{record.affixtime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zjh.pojo.Affix" >
    update affix
    <set >
      <if test="affixname != null" >
        affixname = #{affixname,jdbcType=VARCHAR},
      </if>
      <if test="affixtype != null" >
        affixtype = #{affixtype,jdbcType=VARCHAR},
      </if>
      <if test="affixtime != null" >
        affixtime = #{affixtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zjh.pojo.Affix" >
    update affix
    set affixname = #{affixname,jdbcType=VARCHAR},
      affixtype = #{affixtype,jdbcType=VARCHAR},
      affixtime = #{affixtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zjh.pojo.Affix" >
    update affix
    set affixname = #{affixname,jdbcType=VARCHAR},
      affixtype = #{affixtype,jdbcType=VARCHAR},
      affixtime = #{affixtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- =================================以下自定义方法======================================= -->
  
  <select id="getTotalCount"  resultType="int">
  			select count(*) from affix where status = 0
  	
	  		<if test="startTime != null and  startTime!='' ">
	  			<![CDATA[
	  			and affixtime >= #{startTime}
	  			]]>
	  		</if>
	  		<if test="endTime != null and endTime!='' ">
	  			<![CDATA[
	  			and affixtime <= #{endTime}
	  			]]>
	  		</if>
	  		<if test="affixName != null  and affixName!='' ">
	  			and affixname like CONCAT('%',#{affixName},'%')
	  		</if>
  		
  </select>
  
  <select id="getTotalReclycCount"  resultType="int">
  			select count(*) from affix where status = 1
  	
	  		<if test="startTime != null and  startTime!='' ">
	  			<![CDATA[
	  			and affixtime >= #{startTime}
	  			]]>
	  		</if>
	  		<if test="endTime != null and endTime!='' ">
	  			<![CDATA[
	  			and affixtime <= #{endTime}
	  			]]>
	  		</if>
	  		<if test="affixName != null  and affixName!='' ">
	  			and affixname like CONCAT('%',#{affixName},'%')
	  		</if>
  		
  </select>
  
  <select id="getAffixData" resultMap="ResultMapWithBLOBs">
  		select  id,affixname, affixtype, affixtime, descrption,status,size from affix  where status = 0
  	
	  		<if test="startTime != null and  startTime!='' ">
	  			<![CDATA[
	  			and affixtime >= #{startTime}
	  			]]>
	  		</if>
	  		<if test="endTime != null and endTime!='' ">
	  			<![CDATA[
	  			and affixtime <= #{endTime}
	  			]]>
	  		</if>
	  		<if test="affixName != null  and affixName!='' ">
	  			and affixname like CONCAT('%',#{affixName},'%')
	  		</if>
  		
  		ORDER BY affixtime desc
  		limit #{pagenum},#{pagesize}
  </select>
  
  <select id="findById"  resultMap="ResultMapWithBLOBs"  parameterType="java.lang.Integer" >
    	select  id,affixname, affixtype, affixtime, descrption,status,size,affixpath  from affix  where id = #{id,jdbcType=INTEGER}
  </select>
  
  <update id="deleteAffix" >
  	update affix set  status = #{status,jdbcType=INTEGER}  where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAffixReclycData" resultMap="ResultMapWithBLOBs">
  		select  id,affixname, affixtype, affixtime, descrption,status,size from affix  where status = 1
  	
	  		<if test="startTime != null and  startTime!='' ">
	  			<![CDATA[
	  			and affixtime >= #{startTime}
	  			]]>
	  		</if>
	  		<if test="endTime != null and endTime!='' ">
	  			<![CDATA[
	  			and affixtime <= #{endTime}
	  			]]>
	  		</if>
	  		<if test="affixName != null  and affixName!='' ">
	  			and affixname like CONCAT('%',#{affixName},'%')
	  		</if>
  		
  		ORDER BY affixtime desc
  		limit #{pagenum},#{pagesize}
  </select>
  
  <update id="affixback">
  	update affix set  `status` = '0' where id = #{id}
  </update>
  
  <insert id="insertAffixBackId" parameterType="com.zjh.pojo.Affix" useGeneratedKeys="true" keyProperty="id">
  	insert into affix (affixname,affixtype,affixtime,descrption,status,content,size,affixpath)
    values (#{affixname}, #{affixtype},#{affixtime},#{descrption},#{status}, #{content},#{size},#{affixpath})
  </insert>
  
</mapper>